/* Chapter No. 5 - Exercise No. 3
   File Name:          Program5_3_Gray.java
   Programmer:         Michael Gray
   Date Last Modified: November 5, 2016

   Problem Statement: Write a program to simulate 10,000 duels using two alternate strategies
   
   
   Overall Plan:
   1. Create our new duelists
   2. Create a for loop to run the following 10k times
   3. Conduct the duel using a series of if/else statements to determine who shoots at who
   4. Print the results
   5. Repeat 2-4 using an alternate strategy where aaron intentionall misses the first shot 
   
   main class - Program5_3_Gray
   
   DATA DICTIONARY
   ---------------
   NAME	TYPE		   TYPE        DESCRIPTION
   =================== =========== ====================
   aaronWins           int         amount of duels won by aaron
   bobWins             int         amount of duels won by bob
   charlieWins         int         amount of duels won by charlie
   living              int         determines how many are still alive out of three
   isAlive             boolean     used to reset the duel

   
*/






import java.util.*;

public class Program5_3_Gray {

    public static void main(String[] args) {
    
    Duelist aaron     = new Duelist("Aaron", (1.0/3.0), true);
    Duelist bob       = new Duelist("Bob", (1.0/2.0), true);
    Duelist charlie   = new Duelist("Charlie", 1.0, true);
    
    int aaronWins     = 0;
    int bobWins       = 0;
    int charlieWins   = 0;
    int living        = 3;
    boolean isAlive   = true;
    
    for(int i = 0; i < 10000; i++)
    {
        while(living > 1)
        {
        
            
        if(aaron.getAlive() == true && charlie.getAlive() == true)
        {   
            aaron.shootAt(charlie);
            if(charlie.getAlive() == false)
            {
                living--;
            }
        }
        else if(aaron.getAlive() == true && bob.getAlive() == true)
        {
            aaron.shootAt(bob);
            if(bob.getAlive() == false)
            {
                living--;
            }
        }
    
        //bobs shot
        if(bob.getAlive() == true && charlie.getAlive() == true)
        {
            bob.shootAt(charlie);
            if (charlie.getAlive() == false)
            {
                living--;
            }
        }
        else if (bob.getAlive() == true && aaron.getAlive() == true)
        {
            bob.shootAt(aaron);
            if (aaron.getAlive() == false)
            {
                living--;
            }
        }
    
        //charlies shot
         if(charlie.getAlive() == true && bob.getAlive() == true)
        {
            charlie.shootAt(bob);
            if (bob.getAlive() == false)
            {
                living--;
            }
        }
        else if (charlie.getAlive() == true && aaron.getAlive() == true)
        {
            charlie.shootAt(aaron);
            if (aaron.getAlive() == false)
            {
                living--;
            }
        }
    




        
    }
    
    //deteming winner

    
    if(aaron.getAlive() == true)
    {
        aaronWins++;
    }
    else if(bob.getAlive() == true)
    {
        bobWins++;
    }
    else
    {
        charlieWins++;
    }
    
    
    aaron.setAlive(isAlive);
    bob.setAlive(isAlive);
    charlie.setAlive(isAlive);
    living = 3;    
    }
    
    
    
    System.out.println("Aaron won "+aaronWins+"/10000 or " + ((aaronWins/10000.0) * 100) + "%");
    System.out.println("Bob won "+bobWins+"/10000 or " + ((bobWins/10000.0) * 100) + "%");
    System.out.println("Charlie won "+charlieWins+"/10000 or " + ((charlieWins/10000.0) * 100) + "%");
    
    aaronWins  = 0;
    bobWins    = 0;
    charlieWins= 0;
    
    
    //second strat
    
    for(int i = 0; i < 10000; i++)
    {
        while(living > 1)
        {
    
        //bobs shot
        if(bob.getAlive() == true && charlie.getAlive() == true)
        {
            bob.shootAt(charlie);
            if (charlie.getAlive() == false)
            {
                living--;
            }
        }
        else if (bob.getAlive() == true && aaron.getAlive() == true)
        {
            bob.shootAt(aaron);
            if (aaron.getAlive() == false)
            {
                living--;
            }
        }
    
        //charlies shot
         if(charlie.getAlive() == true && bob.getAlive() == true)
        {
            charlie.shootAt(bob);
            if (bob.getAlive() == false)
            {
                living--;
            }
        }
        else if (charlie.getAlive() == true && aaron.getAlive() == true)
        {
            charlie.shootAt(aaron);
            if (aaron.getAlive() == false)
            {
                living--;
            }
        }
        
        //aarons shot
        if(aaron.getAlive() == true && charlie.getAlive() == true)
        {   
            aaron.shootAt(charlie);
            if(charlie.getAlive() == false)
            {
                living--;
            }
        }
        else if(aaron.getAlive() == true && bob.getAlive() == true)
        {
            aaron.shootAt(bob);
            if(bob.getAlive() == false)
            {
                living--;
            }
        }
    




        
    }
    
    //deteming winner

    
    if(aaron.getAlive() == true)
    {
        aaronWins++;
    }
    else if(bob.getAlive() == true)
    {
        bobWins++;
    }
    else
    {
        charlieWins++;
    }
    
    
    aaron.setAlive(isAlive);
    bob.setAlive(isAlive);
    charlie.setAlive(isAlive);
    living = 3;    
    }
    
    
    System.out.println();
    System.out.println("Using the second strategy...");
        
    System.out.println("Aaron won "+aaronWins+"/10000 or " + ((aaronWins/10000.0) * 100) + "%");
    System.out.println("Bob won "+bobWins+"/10000 or " + ((bobWins/10000.0) * 100) + "%");
    System.out.println("Charlie won "+charlieWins+"/10000 or " + ((charlieWins/10000.0) * 100) + "%");
    
    System.out.println();
    System.out.println("It is better for Aaron to intentionally miss his first shot.");
       
    
    }
}   
 
